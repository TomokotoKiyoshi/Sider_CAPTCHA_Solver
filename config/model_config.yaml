# Model Configuration
# 模型配置文件 - 集中管理神经网络和预处理的所有参数

# ============== 预处理配置 ==============
preprocessing:
  # Letterbox变换配置
  letterbox:
    # 目标尺寸 (width, height) - 网络输入尺寸
    target_size: [512, 256]
    # padding填充值 (0-255)
    fill_value: 255
    # 插值方法: linear, cubic, nearest, area
    interpolation: 'linear'
    
  # 坐标系统配置
  coordinate:
    # 下采样率 (用于生成1/4分辨率特征图)
    downsample: 4
    # 原始输入尺寸将从实际图像动态获取
    # 栅格尺寸会自动计算: (target_height/downsample, target_width/downsample)
    
  # 热图生成配置
  heatmap:
    # 高斯标准差 (栅格单位)
    sigma: 1.5
    # 正样本阈值 (用于确定监督区域)
    threshold: 0.7
    # 高斯半径因子 (radius = sigma * radius_factor)
    radius_factor: 3
    
  # Padding mask配置
  padding_mask:
    # padding区域的值
    padding_value: 1
    # 有效区域的值
    valid_value: 0
    # 下采样方法: avg (软屏蔽) 或 max (硬屏蔽)
    pooling_method: 'avg'
    
  # 角度处理配置
  angle:
    # 是否启用角度处理
    enabled: true
    # 最大旋转角度 (度)
    max_rotation: 1.8
    # 角度监督的热图阈值
    supervision_threshold: 0.7
    
  # 归一化配置
  normalization:
    # 是否启用归一化
    enabled: true
    # RGB均值 (ImageNet标准)
    mean: [0.485, 0.456, 0.406]
    # RGB标准差 (ImageNet标准)
    std: [0.229, 0.224, 0.225]

# ============== 输入配置 ==============
input:
  # 网络输入通道配置
  channels:
    rgb: 3          # RGB通道数
    padding: 1      # Padding掩码通道
    total: 4        # 总输入通道数 (RGB + padding_mask)
  
  # PyTorch张量格式 [channels, height, width]
  # 会根据preprocessing.letterbox.target_size自动计算
  tensor_shape: [4, 256, 512]  # [C, H, W]

# ============== 网络架构配置 ==============
backbone:
  type: "Lite-HRNet-18"
  
  # Lite-HRNet配置
  lite_hrnet:
    # Stem (Stage1) - 特征提取阶段
    stem:
      in_channels: 4        # 输入通道数 (RGB + padding_mask)
      out_channels: 32      # 输出通道数
      expansion: 2          # LiteBlock扩张倍率
      
    # Stage2配置
    stage2:
      num_branches: 2
      num_blocks: [2, 2]
      channels: [32, 64]  # 1/4分辨率: 32, 1/8分辨率: 64
      
    # Stage3配置
    stage3:
      num_branches: 3
      num_blocks: [3, 3, 3]
      channels: [32, 64, 128]  # 1/4: 32, 1/8: 64, 1/16: 128
      
    # Stage4配置
    stage4:
      num_branches: 4
      num_blocks: [2, 2, 2, 2]
      channels: [32, 64, 128, 256]  # 1/4: 32, 1/8: 64, 1/16: 128, 1/32: 256
      
  # 输出分辨率 (相对于输入)
  output_scales: [1/4, 1/8, 1/16, 1/32]
